{"remainingRequest":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/src/components/Kanban.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/src/components/Kanban.vue","mtime":1603850114561},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCgpjb25zdCBCQVNFX1VSTCA9ICJodHRwOi8vbG9jYWxob3N0OjgwMDAvIgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdLYW5iYW4nLAogIGNvbXBvbmVudHM6IHsKICAgIGRyYWdnYWJsZSwKCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybVZhbHVlczoge30sCiAgICAgIG5ld0FwcGxpY2FudDogIiIsCiAgICAgIGJvYXJkTmFtZTogWwogICAgICAgICdBcHBsaWVkJywKICAgICAgICAnUGhvbmVTY3JlZW4nLAogICAgICAgICdPblNpdGUnLAogICAgICAgICdPZmZlcmVkJywKICAgICAgICAnQWNjZXB0ZWQnLAogICAgICAgICdSZWplY3RlZCcKICAgICAgXSwKICAgICAgbGlzdEJvYXJkOiB7CiAgICAgICAgICAnQXBwbGllZCc6IFtdLAogICAgICAgICAgJ1Bob25lU2NyZWVuJzogW10sCiAgICAgICAgICAnT25TaXRlJzogW10sCiAgICAgICAgICAnT2ZmZXJlZCc6IFtdLAogICAgICAgICAgJ0FjY2VwdGVkJzogW10sCiAgICAgICAgICAnUmVqZWN0ZWQnOiBbXQogICAgICB9LAogICAgICB0ZW1wUmF0ZTogMCwKICAgICAgcmV2aWV3Rm9ybTogbnVsbCwKICAgICAgY29sbGFwc2VJRDogMSwKICAgICAgYXBwbGljYW50UmVnaXN0ZXJlZDogZmFsc2UKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uKCkgewogICAgY29uc29sZS5sb2codGhpcy5saXN0Qm9hcmQpCiAgICB0aGlzLmdldEFsbEFwcGxpY2FudHMoKTsKICAgIGNvbnNvbGUubG9nKHRoaXMubGlzdEJvYXJkKQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU3VibWl0KCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmZvcm1WYWx1ZXMpOwogICAgICB2YXIgY29udGFjdCA9IHRoaXMuZm9ybVZhbHVlc1snY29udGFjdCddOwogICAgICB0aGlzLmNoZWNrQXBwbGljYW50KGNvbnRhY3QpOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmFwcGxpY2FudFJlZ2lzdGVyZWQpOwogICAgICBpZiAodGhpcy5hcHBsaWNhbnRSZWdpc3RlcmVkKSB7CiAgICAgICAgLy8gbm8gYWRkaW5nCiAgICAgIH0gZWxzZSB7CgogICAgICAgIHZhciBjYXJkID0gbmV3IENhcmQoCiAgICAgICAgICB0aGlzLmZvcm1WYWx1ZXNbJ25hbWUnXSwKICAgICAgICAgIHRoaXMuZm9ybVZhbHVlc1snZWR1Y2F0aW9uJ10sCiAgICAgICAgICB0aGlzLmZvcm1WYWx1ZXNbJ2NvbnRhY3QnXQogICAgICAgICk7CiAgICAgICAgdGhpcy5saXN0Qm9hcmRbJ0FwcGxpZWQnXS5wdXNoKGNhcmQpOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMubGlzdEJvYXJkWydBcHBsaWVkJ10pOwoKICAgICAgICBheGlvcyh7CiAgICAgICAgICB1cmw6IEJBU0VfVVJMICsgImFkZC1hcHBsaWNhbnQiLAogICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICBoZWFkZXJzOiB7IAogICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sCiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIG5hbWU6IGNhcmQubmFtZSwKICAgICAgICAgICAgZWR1Y2F0aW9uOiBjYXJkLmVkdWNhdGlvbiwKICAgICAgICAgICAgY29udGFjdDogY2FyZC5jb250YWN0LAogICAgICAgICAgICBzdGF0dXM6ICdBcHBsaWVkJywKICAgICAgICAgICAgcmF0ZTogMCwKICAgICAgICAgICAgcmF0ZV9udW1iZXI6IDAKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgICAKICAgIH0sCgogICAgc3VibWl0UmV2aWV3KGNhcmQpIHsKICAgICAgY29uc29sZS5sb2coImZpcmVkICIgKyB0aGlzLnJldmlld0Zvcm0pOwogICAgICAgIGF4aW9zKHsKICAgICAgICB1cmw6IEJBU0VfVVJMICsgImFkZC1yYXRlIiwKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBoZWFkZXJzOiB7IAogICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICAnY29udGFjdCc6IGNhcmQuY29udGFjdCwKICAgICAgICAgICduZXdSYXRlJzogdGhpcy5yZXZpZXdGb3JtWydyYXRlJ10KICAgICAgICB9CiAgICAgIH0pOwogICAgICAKICAgICAgLy8gc3VibWl0IGNvbW1lbnQKICAgICAgCiAgICAgICAgYXhpb3MoewogICAgICAgIHVybDogQkFTRV9VUkwgKyAiYWRkLWNvbW1lbnQiLAogICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgIGhlYWRlcnM6IHsgCiAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LAogICAgICAgIGRhdGE6IHsKICAgICAgICAgICdjb250YWN0JzogY2FyZC5jb250YWN0LAogICAgICAgICAgJ2F1dGhvcic6IHRoaXMucmV2aWV3Rm9ybVsnYXV0aG9yJ10sCiAgICAgICAgICAnY29udGVudCc6IHRoaXMucmV2aWV3Rm9ybVsnY29tbWVudCddCiAgICAgICAgfQogICAgICB9KTsKICAgICAgY2FyZC5yZXZpZXdlZCA9IHRydWU7CiAgICAgIAogICAgfSwKCiAgICBjaGVja0FwcGxpY2FudCgpIHsKICAgICAgdmFyIGNvbnRhY3QgPSB0aGlzLmZvcm1WYWx1ZXNbJ2NvbnRhY3QnXTsKICAgICAgYXhpb3MoewogICAgICAgIHVybDogQkFTRV9VUkwgKyAiZ2V0LWFwcGxpY2FudCIsCiAgICAgICAgcGFyYW1zOiB7Y29udGFjdDogY29udGFjdH0sCiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBoZWFkZXJzOiB7IAogICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSwKICAgICAgfSkKICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCdjaGVjayBhcHBsaWNhbnQ6ICcgKyByZXNwb25zZS5kYXRhKQogICAgICAgIGlmIChyZXNwb25zZS5kYXRhID09ICcxJykgewogICAgICAgICAgdGhpcy5hcHBsaWNhbnRSZWdpc3RlcmVkID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5hcHBsaWNhbnRSZWdpc3RlcmVkID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgZ2V0QWxsQXBwbGljYW50cygpIHsKICAgICAgLy8gdGhpcy5yZWZyZXNoTGlzdCgpOwogICAgICB2YXIgZW50cnkgPSBudWxsOwogICAgICBheGlvcyh7CiAgICAgICAgdXJsOiBCQVNFX1VSTCArICJnZXQtYWxsLWFwcGxpY2FudHMiLAogICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgaGVhZGVyczogeyAKICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sCiAgICAgIH0pCiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhWzBdKTsKICAgICAgICBmb3IgKGVudHJ5IG9mIHJlc3BvbnNlLmRhdGEpIHsKICAgICAgICAgIHZhciBjYXJkID0gbmV3IENhcmQoZW50cnkubmFtZSwgZW50cnkuZWR1Y2F0aW9uLCBlbnRyeS5jb250YWN0KTsKICAgICAgICAgIGNhcmQucmF0ZSA9IGVudHJ5LnJhdGU7CiAgICAgICAgICBjYXJkLmNvbW1lbnRzID0gZW50cnkuY29tbWVudDsKICAgICAgICAgIGNhcmQuaWQgPSBlbnRyeS5pZDsKICAgICAgICAgIHRoaXMubGlzdEJvYXJkW2VudHJ5LnN0YXR1c10ucHVzaChjYXJkKQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCgogICAgcmVmcmVzaExpc3QoKSB7CiAgICAgIHZhciBuID0gbnVsbDsKICAgICAgZm9yIChuIG9mIHRoaXMuYm9hcmROYW1lKSB7CiAgICAgICAgdGhpcy5saXN0Qm9hcmRbbl0gPSBbXQogICAgICB9CiAgICB9LAoKICAgIHVwZGF0ZVN0YXR1cygpIHsKICAgICAgY29uc29sZS5sb2coInVwZGF0aW5nIHN0YXR1cyIpOwogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYm9hcmROYW1lLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGN1cl9ib2FyZCA9IHRoaXMuYm9hcmROYW1lW2ldOwogICAgICAgIHZhciBib2FyZCA9IHRoaXMubGlzdEJvYXJkW2N1cl9ib2FyZF07CiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBib2FyZC5sZW5ndGg7IGorKykgewogICAgICAgICAgaWYgKGJvYXJkW2pdLnN0YXR1cyAhPT0gY3VyX2JvYXJkKSB7CiAgICAgICAgICAgIC8vIHVwZGF0ZSB0aGUgc3RhdHVzCiAgICAgICAgICAgIGF4aW9zKHsKICAgICAgICAgICAgICB1cmw6IEJBU0VfVVJMICsgInVwZGF0ZS1hcHBsaWNhbnQtc3RhdHVzIiwKICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICBoZWFkZXJzOiB7IAogICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSwKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAnY29udGFjdCc6IGJvYXJkW2pdLmNvbnRhY3QsCiAgICAgICAgICAgICAgICAnc3RhdHVzJzogY3VyX2JvYXJkCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICAgIH0KICAgIH0sCgogICAgaW5jcmVtZW50Q29sbGFwc2VJRCgpIHsKICAgICAgdGhpcy5jb2xsYXBzZUlEKys7CiAgICAgIHJldHVybiAnY29sbGFwc2UtJyArIHRoaXMuY29sbGFwc2VJRC50b1N0cmluZygpOwogICAgfQoKICB9LAoKfQoKZXhwb3J0IGNsYXNzIENhcmQgewogIGNvbnN0cnVjdG9yKG5hbWUsIGVkdWNhdGlvbiwgY29udGFjdCkgewogICAgdGhpcy5pZCA9IDA7CiAgICB0aGlzLm5hbWUgPSBuYW1lOwogICAgdGhpcy5lZHVjYXRpb24gPSBlZHVjYXRpb247CiAgICB0aGlzLmNvbnRhY3QgPSBjb250YWN0OwogICAgdGhpcy5zdGF0dXMgPSAiQXBwbGllZCI7CiAgICB0aGlzLnJhdGUgPSAwOwogICAgdGhpcy5yZXZpZXdlZCA9IGZhbHNlOwogICAgdGhpcy5jb21tZW50cyA9IFsKICAgICAgCiAgICBdCiAgfQoKICByZW5kZXJDYXJkKCkgewogICAgcmV0dXJuICgKICAgICAgIjxoNT4iICsgdGhpcy5uYW1lICsgIjwvaDU+IiArCiAgICAgICI8c3Bhbj4iICsgdGhpcy5lZHVjYXRpb24gKyAiICAgIHwgICAgIiArICI8L3NwYW4+IiArCiAgICAgICI8c3Bhbj4iICsgdGhpcy5jb250YWN0ICsgIiAgICB8ICAgICIgKyAiPC9zcGFuPiIgKwogICAgICAiPHNwYW4+QXZnLiBSYXRpbmc6ICIgKyB0aGlzLnJhdGUgKyAiPC9zcGFuPiIgCiAgICApCiAgfQoKfQoK"},{"version":3,"sources":["Kanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Kanban.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"b-container mt-5 mx-5\">\n\n    \n      <FormulateForm v-model=\"formValues\" @submit=\"handleSubmit\">\n        <FormulateInput name=\"name\" label=\"Name\" validation=\"required\" />\n        <FormulateInput name=\"education\" label=\"Education\" validation=\"required\" />\n        <FormulateInput @blur=\"checkApplicant\" name=\"contact\" label=\"Contact\" validation=\"required|number\" />\n        <FormulateInput :disabled=\"applicantRegistered\" type=\"submit\" label=\"Add Applicant\"/>\n        <p v-show=\"applicantRegistered\">'Adding failed. This contact number is already registered'</p>\n      </FormulateForm>\n    \n    <br>\n    <b-button block pill v-b-toggle.collapse-1 variant=\"outline-primary\" class=\"\">Switch Between Abstract / Detail View</b-button>\n    <div class=\"row mt-4\">\n      <div class=\"col-4\" v-for=\"bName in boardName\" :key=\"bName\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{bName}}</h3>\n          <!-- Backlog draggable component. Pass arrBackLog to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[bName]\"\n            group=\"tasks\"\n            @end=\"updateStatus\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[bName]\"\n              :key=\"element.name\"\n            >\n              <div>\n              <!-- {{ element.name }} -->\n              <!-- Basic Info -->\n              <div v-html=\"element.renderCard()\"></div>\n\n              <!-- Collaps Detail -->\n              <b-collapse id=\"collapse-1\" class=\"mt-2\">\n                <b-card>\n                  <!-- Rate -->\n                  <!-- Add Comment -->\n                  <FormulateForm v-model=\"reviewForm\" @submit=\"submitReview(element)\">\n                    <FormulateInput\n                      name=\"rate\"\n                      :options=\"{1: 1, 2: 2, 3: 3, 4: 4, 5:5}\"\n                      type=\"select\"\n                      placeholder=\"Your rating\"\n                      label=\"How well is this applicant?\"\n                    />\n                    <FormulateInput name=\"author\" placeholder=\"Reviewer\" validation=\"required\" />\n                    <FormulateInput name=\"comment\" placeholder=\"Enter your comment\" validation=\"required\" />\n\n                  <!-- <FormulateInput class=\"col\" name=\"rate\" placeholder=\"Enter your rate\" validation=\"required\" /> -->\n                  <FormulateInput type=\"submit\" :disabled=\"element.reviewed\" label=\"Submit\" />\n                  <p v-show=\"element.reviewed\">Submitted! Refresh the page to see updated result</p>\n                  </FormulateForm>\n                </b-card>\n                <b-card>\n                  <p>Comments</p>\n                  <b-list-group>\n                    <b-list-group-item class=\"d-flex align-items-center\" v-for=\"comment in element.comments\" v-bind:key=\"comment.author\">\n                      <b-avatar class=\"mr-3\"></b-avatar>\n                      <span class=\"mr-auto\">{{comment['author']}}</span>\n                      <span class=\"mr-auto\">{{comment['content']}}</span>\n                    </b-list-group-item>\n                  </b-list-group>\n                   \n                  \n                </b-card>\n              </b-collapse>\n              </div>\n\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\"\nimport axios from 'axios'\n\nconst BASE_URL = \"http://localhost:8000/\"\n\nexport default {\n  name: 'Kanban',\n  components: {\n    draggable,\n\n  },\n  data() {\n    return {\n      formValues: {},\n      newApplicant: \"\",\n      boardName: [\n        'Applied',\n        'PhoneScreen',\n        'OnSite',\n        'Offered',\n        'Accepted',\n        'Rejected'\n      ],\n      listBoard: {\n          'Applied': [],\n          'PhoneScreen': [],\n          'OnSite': [],\n          'Offered': [],\n          'Accepted': [],\n          'Rejected': []\n      },\n      tempRate: 0,\n      reviewForm: null,\n      collapseID: 1,\n      applicantRegistered: false\n    }\n  },\n  mounted: function() {\n    console.log(this.listBoard)\n    this.getAllApplicants();\n    console.log(this.listBoard)\n  },\n  methods: {\n    handleSubmit() {\n      console.log(this.formValues);\n      var contact = this.formValues['contact'];\n      this.checkApplicant(contact);\n      console.log(this.applicantRegistered);\n      if (this.applicantRegistered) {\n        // no adding\n      } else {\n\n        var card = new Card(\n          this.formValues['name'],\n          this.formValues['education'],\n          this.formValues['contact']\n        );\n        this.listBoard['Applied'].push(card);\n        console.log(this.listBoard['Applied']);\n\n        axios({\n          url: BASE_URL + \"add-applicant\",\n          method: 'post',\n          headers: { \n            'Accept': 'application/json',\n            'Content-Type': 'application/json' },\n          data: {\n            name: card.name,\n            education: card.education,\n            contact: card.contact,\n            status: 'Applied',\n            rate: 0,\n            rate_number: 0\n          }\n        });\n      }\n      \n    },\n\n    submitReview(card) {\n      console.log(\"fired \" + this.reviewForm);\n        axios({\n        url: BASE_URL + \"add-rate\",\n        method: 'post',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n        data: {\n          'contact': card.contact,\n          'newRate': this.reviewForm['rate']\n        }\n      });\n      \n      // submit comment\n      \n        axios({\n        url: BASE_URL + \"add-comment\",\n        method: 'post',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n        data: {\n          'contact': card.contact,\n          'author': this.reviewForm['author'],\n          'content': this.reviewForm['comment']\n        }\n      });\n      card.reviewed = true;\n      \n    },\n\n    checkApplicant() {\n      var contact = this.formValues['contact'];\n      axios({\n        url: BASE_URL + \"get-applicant\",\n        params: {contact: contact},\n        method: 'get',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n      })\n      .then(response => {\n        console.log('check applicant: ' + response.data)\n        if (response.data == '1') {\n          this.applicantRegistered = true;\n        } else {\n          this.applicantRegistered = false;\n        }\n      });\n    },\n\n    getAllApplicants() {\n      // this.refreshList();\n      var entry = null;\n      axios({\n        url: BASE_URL + \"get-all-applicants\",\n        method: 'get',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n      })\n      .then(response => {\n        console.log(response.data[0]);\n        for (entry of response.data) {\n          var card = new Card(entry.name, entry.education, entry.contact);\n          card.rate = entry.rate;\n          card.comments = entry.comment;\n          card.id = entry.id;\n          this.listBoard[entry.status].push(card)\n        }\n      })\n    },\n\n    refreshList() {\n      var n = null;\n      for (n of this.boardName) {\n        this.listBoard[n] = []\n      }\n    },\n\n    updateStatus() {\n      console.log(\"updating status\");\n      for (var i = 0; i < this.boardName.length; i++) {\n        var cur_board = this.boardName[i];\n        var board = this.listBoard[cur_board];\n        for (var j = 0; j < board.length; j++) {\n          if (board[j].status !== cur_board) {\n            // update the status\n            axios({\n              url: BASE_URL + \"update-applicant-status\",\n              method: 'post',\n              headers: { \n                'Accept': 'application/json',\n                'Content-Type': 'application/json' },\n              data: {\n                'contact': board[j].contact,\n                'status': cur_board\n              }\n            });\n          }\n        }\n        \n      }\n    },\n\n    incrementCollapseID() {\n      this.collapseID++;\n      return 'collapse-' + this.collapseID.toString();\n    }\n\n  },\n\n}\n\nexport class Card {\n  constructor(name, education, contact) {\n    this.id = 0;\n    this.name = name;\n    this.education = education;\n    this.contact = contact;\n    this.status = \"Applied\";\n    this.rate = 0;\n    this.reviewed = false;\n    this.comments = [\n      \n    ]\n  }\n\n  renderCard() {\n    return (\n      \"<h5>\" + this.name + \"</h5>\" +\n      \"<span>\" + this.education + \"    |    \" + \"</span>\" +\n      \"<span>\" + this.contact + \"    |    \" + \"</span>\" +\n      \"<span>Avg. Rating: \" + this.rate + \"</span>\" \n    )\n  }\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n/* light stylings for the kanban columns */\n.kanban-column {\n  min-height: 300px;\n}\n</style>\n"]}]}