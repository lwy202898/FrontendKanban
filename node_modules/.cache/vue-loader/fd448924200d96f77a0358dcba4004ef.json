{"remainingRequest":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/src/components/Kanban.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/src/components/Kanban.vue","mtime":1603744432376},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogbGlnaHQgc3R5bGluZ3MgZm9yIHRoZSBrYW5iYW4gY29sdW1ucyAqLwoua2FuYmFuLWNvbHVtbiB7CiAgbWluLWhlaWdodDogMzAwcHg7Cn0K"},{"version":3,"sources":["Kanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;AACA;AACA;AACA","file":"Kanban.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"container mt-5\">\n    <div class=\"row\">\n      <div class=\"col form-inline\">\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"newApplicant\"\n          required\n          placeholder=\"Enter new applicant's name\"\n          @keyup.enter=\"add\"\n        ></b-form-input>\n        <b-button @click=\"add\" variant=\"primary\" class=\"ml-3\">Add</b-button>\n      </div>\n    </div>\n\n    \n      <FormulateForm v-model=\"formValues\" @submit=\"handleSubmit\">\n        <FormulateInput name=\"name\" label=\"Name\" validation=\"required\" />\n        <FormulateInput name=\"education\" label=\"Education\" validation=\"required\" />\n        <FormulateInput name=\"contact\" label=\"Contact\" validation=\"required|number\" />\n        <FormulateInput type=\"submit\" label=\"Add Applicant\"/>\n      </FormulateForm>\n    \n\n\n    <div class=\"row mt-5\">\n      <div class=\"col-3\">\n        <div class=\"p-2 alert alert-secondary\">\n          <h3>{{boardName[0]}}</h3>\n          <!-- Backlog draggable component. Pass arrBackLog to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[0]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[0]]\"\n              :key=\"element.name\"\n            >\n              <!-- {{ element.name }} -->\n              <!-- Basic Info -->\n              <div v-html=\"element.renderCard()\"></div>\n              <!-- Rate -->\n              <FormulateForm v-model=\"tempRate\" @submit=\"element.submitRate(this.tempRate)\">\n                <FormulateInput class=\"col-1 px-1\" name=\"rate\" placeholder=\"Enter your rate\" validation=\"required\" />\n                <FormulateInput class=\"col-1\" type=\"submit\" name=\"rate\" label=\"Rate\" validation=\"required\" />\n              </FormulateForm>\n              <!-- Button trigger modal -->\n              <button type=\"button\" class=\"btn btn-primary\">\n                Detail\n              </button>\n\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n      <div class=\"col-3\">\n        <div class=\"p-2 alert alert-primary\">\n          <h3>{{boardName[1]}}</h3>\n          <!-- In Progress draggable component. Pass arrInProgress to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[1]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[1]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n      <div class=\"col-3\">\n        <div class=\"p-2 alert alert-warning\">\n          <h3>{{boardName[2]}}</h3>\n          <!-- Testing draggable component. Pass arrTested to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[2]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[2]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n      <div class=\"col-3\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{boardName[3]}}</h3>\n          <!-- Done draggable component. Pass arrDone to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[3]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[3]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n       <div class=\"col-3\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{boardName[4]}}</h3>\n          <!-- Done draggable component. Pass arrDone to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[4]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[4]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n       <div class=\"col-3\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{boardName[5]}}</h3>\n          <!-- Done draggable component. Pass arrDone to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[5]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[5]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\"\n\nexport default {\n  name: 'Kanban',\n  components: {\n    draggable,\n\n  },\n  data() {\n    return {\n      formValues: {},\n      newApplicant: \"\",\n      boardName: [\n        'Applied',\n        'PhoneScreen',\n        'OnSite',\n        'Offered',\n        'Accepted',\n        'Rejected'\n      ],\n      listBoard: {\n          'Applied': [],\n          'PhoneScreen': [],\n          'OnSite': [],\n          'Offered': [],\n          'Accepted': [],\n          'Rejected': []\n      },\n      tempRate: 0\n    }\n  },\n  methods: {\n    add: function() {\n      if (this.newApplicant) {\n        this.listBoard['Applied'].push({name: this.newApplicant});\n        this.newApplicant = \"\";\n      }\n    },\n    handleSubmit() {\n      console.log(this.formValues);\n      var card = new Card(\n        this.formValues['name'],\n        this.formValues['education'],\n        this.formValues['contact']\n      );\n      this.listBoard['Applied'].push(card);\n      console.log(this.listBoard['Applied'])\n    }\n  }\n}\n\nclass Card {\n  constructor(name, education, contact) {\n    this.name = name;\n    this.education = education;\n    this.contact = contact;\n    this.status = \"Applied\";\n    this.rate = 0;\n    this.rateNumber = 0;\n    this.curRate = 0;\n  }\n\n  renderCard() {\n    return (\n      \"<h5>\" + this.name + \"</h5>\" +\n      \"<p>\" + this.contact + \"</br>\" +\n      this.education + \"</br>\" +\n      \"Average Rate: \" + this.rate + \"</p>\" \n    )\n  }\n\n  submitRate(tempRate) {\n    this.curRate = tempRate;\n    if (this.curRate != 0) {\n      var sum = this.curRate * this.rateNumber;\n      this.rateNumber++;\n      this.rate = (sum + this.curRate) / this.rateNumber;\n    }\n  }\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n/* light stylings for the kanban columns */\n.kanban-column {\n  min-height: 300px;\n}\n</style>\n"]}]}