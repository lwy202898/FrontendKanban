{"remainingRequest":"/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/src/components/Kanban.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/src/components/Kanban.vue","mtime":1603929675653},{"path":"/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenyanliu/Desktop/PracticeProj/frontendKanban/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Kanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Kanban.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"b-container mt-5 mx-5\">\n\n    \n      <FormulateForm v-model=\"formValues\" @submit=\"handleSubmit\">\n        <FormulateInput name=\"firstname\" label=\"First Name\" validation=\"required\" />\n        <FormulateInput name=\"lastname\" label=\"Last Name\" validation=\"required\" />\n        <FormulateInput name=\"education\" label=\"Education\" validation=\"required\" />\n        <FormulateInput @blur=\"checkApplicant\" name=\"contact\" label=\"Contact\" validation=\"required|number\" />\n        <p></p>\n        <FormulateInput :disabled=\"applicantRegistered\" type=\"submit\" label=\"Add Applicant\"/>\n        <p v-show=\"applicantRegistered\">'Adding failed. This contact number is already registered'</p>\n      </FormulateForm>\n    \n    <br>\n    <b-button block pill v-b-toggle.collapse-1 variant=\"outline-primary\" class=\"\"> Switch View</b-button>\n    <div class=\"row mt-4\">\n      <div class=\"col-4\" v-for=\"bName in boardName\" :key=\"bName\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{bName}}</h3>\n          <!-- Backlog draggable component. Pass arrBackLog to list prop -->\n          <vue-custom-scrollbar class=\"scroll-area\"  :settings=\"settings\" @ps-scroll-y=\"scrollHanle\">\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[bName]\"\n            group=\"tasks\"\n            @end=\"updateStatus\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[bName]\"\n              :key=\"element.name\"\n            >\n              <div>\n              <!-- {{ element.name }} -->\n              <!-- Basic Info -->\n               <div v-html=\"element.renderCard()\"></div>\n\n              <!-- Collaps Detail -->\n              <b-collapse id=\"collapse-1\" class=\"mt-2\">\n                <b-card>\n                  <!-- Rate -->\n                  <!-- Add Comment -->\n                  <div class=\"commentArea\">\n                  <FormulateForm v-model=\"reviewForm\" @submit=\"submitReview(element)\">\n                    <FormulateInput\n                      name=\"rate\"\n                      :options=\"{1: 1, 2: 2, 3: 3, 4: 4, 5: 5}\"\n                      type=\"select\"\n                      placeholder=\"Your rating\"\n                      label=\"How well is this applicant?\"\n                    />\n                    <FormulateInput name=\"author\" placeholder=\"Reviewer\" validation=\"required\" />\n                    <FormulateInput name=\"comment\" placeholder=\"Enter your comment\" validation=\"required\" />\n\n                  <!-- <FormulateInput class=\"col\" name=\"rate\" placeholder=\"Enter your rate\" validation=\"required\" /> -->\n                  <FormulateInput type=\"submit\" :disabled=\"element.reviewed\" label=\"Submit\" />\n                  <p v-show=\"element.reviewed\">Submitted! Refresh the page to see updated result</p>\n                  </FormulateForm>\n                  </div>\n                </b-card>\n                <b-card>\n                  <p>Comments</p>\n                  <b-list-group>\n                    <b-list-group-item class=\"d-flex align-items-center\" v-for=\"comment in element.comments\" v-bind:key=\"comment.author\">\n                      <b-avatar class=\"mr-3\"></b-avatar>\n                      <span class=\"mr-auto\">{{comment['author']}}</span>\n                      <span class=\"mr-auto\">{{comment['content']}}</span>\n                    </b-list-group-item>\n                  </b-list-group>\n                   \n                  \n                </b-card>\n              </b-collapse>\n              </div>\n\n            </div>\n          </draggable>\n          </vue-custom-scrollbar>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\"\nimport axios from 'axios'\nimport \"vue-custom-scrollbar/dist/vueScrollbar.css\"\nimport vueCustomScrollbar from 'vue-custom-scrollbar'\n\nconst BASE_URL = \"http://localhost:8081/\"\n\nexport default {\n\n  name: 'Kanban',\n  components: {\n    draggable,\n    vueCustomScrollbar,\n  },\n  data() {\n    return {\n      settings: {\n        suppressScrollY: false,\n        suppressScrollX: false,\n        wheelPropagation: false\n      },\n      formValues: {},\n      newApplicant: \"\",\n      boardName: [\n        'Applied',\n        'PhoneScreen',\n        'OnSite',\n        'Offered',\n        'Accepted',\n        'Rejected'\n      ],\n      listBoard: {\n          'Applied': [],\n          'PhoneScreen': [],\n          'OnSite': [],\n          'Offered': [],\n          'Accepted': [],\n          'Rejected': []\n      },\n      tempRate: 0,\n      reviewForm: null,\n      collapseID: 1,\n      applicantRegistered: false\n    }\n  },\n  mounted: function() {\n    console.log(this.listBoard)\n    this.getAllApplicants();\n    console.log(this.listBoard)\n  },\n  methods: {\n    handleSubmit() {\n      console.log(this.formValues);\n      var contact = this.formValues['contact'];\n      this.checkApplicant(contact);\n      console.log(this.applicantRegistered);\n      if (this.applicantRegistered) {\n        // no adding\n      } else {\n\n        var card = new Card(\n          this.formValues['firstname'],\n          this.formValues['lastname'],\n          this.formValues['education'],\n          this.formValues['contact']\n        );\n        this.listBoard['Applied'].push(card);\n        console.log(this.listBoard['Applied']);\n\n        axios({\n          url: BASE_URL + \"add-applicant\",\n          method: 'post',\n          headers: { \n            'Accept': 'application/json',\n            'Content-Type': 'application/json' },\n          data: {\n            'firstname': card.firstname,\n            'lastname': card.lastname,\n            'education': card.education,\n            'contact': card.contact,\n            'status': 'Applied',\n            'rate': 0,\n            'rate_number': 0\n          }\n        });\n        this.formValues = null;\n      }\n      \n    },\n\n    submitReview(card) {\n      console.log(\"fired \" + this.reviewForm);\n        axios({\n        url: BASE_URL + \"add-rate\",\n        method: 'post',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n        data: {\n          'firstname': card.firstname,\n          'lastname': card.lastname,\n          'education': card.education,\n          'contact': card.contact,\n          'status': 'Applied',\n          'rate': this.reviewForm['rate'],\n          'rate_number': 0\n        }\n      });\n      \n      // submit comment\n      \n        axios({\n        url: BASE_URL + \"add-comment\",\n        method: 'post',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n        data: {\n          'contact': card.contact,\n          'author': this.reviewForm['author'],\n          'content': this.reviewForm['comment']\n        }\n      });\n      card.reviewed = true;\n      \n    },\n\n    checkApplicant() {\n      var contact = this.formValues['contact'];\n      axios({\n        url: BASE_URL + \"check-applicant\",\n        params: {contact: contact},\n        method: 'get',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n      })\n      .then(response => {\n        console.log('check applicant: ' + response.data.data)\n        if (response.data.data == \"1\") {\n          this.applicantRegistered = true;\n        } else {\n          this.applicantRegistered = false;\n        }\n      });\n    },\n\n    getAllApplicants() {\n      // this.refreshList();\n      var entry = null;\n      axios({\n        url: BASE_URL + \"get-all-applicants\",\n        method: 'get',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n      })\n      .then(response => {\n        for (entry of response.data.data['Applicant']) {\n          var card = new Card(entry.firstname, entry.lastname, entry.education, entry.contact);\n          card.rate = entry.rate;\n          card.status = entry.status;\n          var entry1 = null;\n          for (entry1 of response.data.data['Comment']) {\n            if (entry1.contact == card.contact) {\n              card.comments.push(entry1);\n            }\n          }\n          this.listBoard[card.status].push(card);\n        }\n      })\n    },\n\n    refreshList() {\n      var n = null;\n      for (n of this.boardName) {\n        this.listBoard[n] = []\n      }\n    },\n\n    updateStatus() {\n      console.log(\"updating status\");\n      for (var i = 0; i < this.boardName.length; i++) {\n        var cur_board = this.boardName[i];\n        var board = this.listBoard[cur_board];\n        for (var j = 0; j < board.length; j++) {\n          if (board[j].status !== cur_board) {\n            // update the status\n            axios({\n              url: BASE_URL + \"update-applicant-status\",\n              method: 'post',\n              headers: { \n                'Accept': 'application/json',\n                'Content-Type': 'application/json' },\n              data: {\n                'contact': board[j].contact,\n                'status': cur_board,\n                'firstname': board[j].firstname,\n                'lastname': board[j].lastname,\n                'education': board[j].education,\n                'rate': 0,\n                'rate_number': 0\n              }\n            });\n          }\n        }\n        \n      }\n    },\n\n    incrementCollapseID() {\n      this.collapseID++;\n      return 'collapse-' + this.collapseID.toString();\n    },\n\n    scrollHanle(evt) {\n      console.log(evt)\n    }\n\n  },\n\n}\n\nexport class Card {\n  constructor(firstname, lastname, education, contact) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n    this.education = education;\n    this.contact = contact;\n    this.status = \"Applied\";\n    this.rate = 0;\n    this.reviewed = false;\n    this.comments = [\n      \n    ]\n  }\n\n  renderCard() {\n    return (\n      \"<h5>\" + this.firstname + \"</h5>\" + \"<h5>\" + this.lastname + \"</h5>\" +\n      \"<span>\" + this.education + \"    |    \" + \"</span>\" +\n      \"<span>\" + this.contact + \"    |    \" + \"</span>\" +\n      \"<span>Avg. Rating: \" + this.rate + \"</span>\" \n    )\n  }\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n/* light stylings for the kanban columns */\n.kanban-column {\n  min-height: 300px;\n}\n.scroll-area {\n  position: relative;\n  margin: auto;\n  overflow-x: auto;\n  height: 400px;\n}\n.commentArea {\n  position: relative;\n  margin: auto;\n  overflow-x: auto;\n}\n</style>\n"]}]}