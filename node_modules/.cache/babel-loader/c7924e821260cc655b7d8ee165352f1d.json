{"remainingRequest":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/babel-loader/lib/index.js!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/src/components/Kanban.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/src/components/Kanban.vue","mtime":1603753103608},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2p6aC9PbmVkcml2ZS9cdThCQTFcdTdCOTdcdTY3M0EvQ29sbGV2X3Byb2plY3Qva2FuYmFuLWhlbnJ5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2p6aC9PbmVkcml2ZS9cdThCQTFcdTdCOTdcdTY3M0EvQ29sbGV2X3Byb2plY3Qva2FuYmFuLWhlbnJ5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdLYW5iYW4nLAogIGNvbXBvbmVudHM6IHsKICAgIGRyYWdnYWJsZTogZHJhZ2dhYmxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybVZhbHVlczoge30sCiAgICAgIG5ld0FwcGxpY2FudDogIiIsCiAgICAgIGJvYXJkTmFtZTogWydBcHBsaWVkJywgJ1Bob25lU2NyZWVuJywgJ09uU2l0ZScsICdPZmZlcmVkJywgJ0FjY2VwdGVkJywgJ1JlamVjdGVkJ10sCiAgICAgIGxpc3RCb2FyZDogewogICAgICAgICdBcHBsaWVkJzogW10sCiAgICAgICAgJ1Bob25lU2NyZWVuJzogW10sCiAgICAgICAgJ09uU2l0ZSc6IFtdLAogICAgICAgICdPZmZlcmVkJzogW10sCiAgICAgICAgJ0FjY2VwdGVkJzogW10sCiAgICAgICAgJ1JlamVjdGVkJzogW10KICAgICAgfSwKICAgICAgdGVtcFJhdGU6IDAKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHsKICAgICAgaWYgKHRoaXMubmV3QXBwbGljYW50KSB7CiAgICAgICAgdGhpcy5saXN0Qm9hcmRbJ0FwcGxpZWQnXS5wdXNoKHsKICAgICAgICAgIG5hbWU6IHRoaXMubmV3QXBwbGljYW50CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5uZXdBcHBsaWNhbnQgPSAiIjsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24gaGFuZGxlU3VibWl0KCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmZvcm1WYWx1ZXMpOwogICAgICB2YXIgY2FyZCA9IG5ldyBDYXJkKHRoaXMuZm9ybVZhbHVlc1snbmFtZSddLCB0aGlzLmZvcm1WYWx1ZXNbJ2VkdWNhdGlvbiddLCB0aGlzLmZvcm1WYWx1ZXNbJ2NvbnRhY3QnXSk7CiAgICAgIHRoaXMubGlzdEJvYXJkWydBcHBsaWVkJ10ucHVzaChjYXJkKTsKICAgICAgY29uc29sZS5sb2codGhpcy5saXN0Qm9hcmRbJ0FwcGxpZWQnXSk7CiAgICB9LAogICAgbmF2VG9EZXRhaWw6IGZ1bmN0aW9uIG5hdlRvRGV0YWlsKGNvbnRhY3QpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9kZXRhaWwvIiArIGNvbnRhY3QpOwogICAgfQogIH0KfTsKZXhwb3J0IHZhciBDYXJkID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBDYXJkKG5hbWUsIGVkdWNhdGlvbiwgY29udGFjdCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENhcmQpOwoKICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICB0aGlzLmVkdWNhdGlvbiA9IGVkdWNhdGlvbjsKICAgIHRoaXMuY29udGFjdCA9IGNvbnRhY3Q7CiAgICB0aGlzLnN0YXR1cyA9ICJBcHBsaWVkIjsKICAgIHRoaXMucmF0ZSA9IDA7CiAgICB0aGlzLnJhdGVOdW1iZXIgPSAwOwogICAgdGhpcy5jdXJSYXRlID0gMDsKICAgIHRoaXMuY29tbWVudHMgPSBbewogICAgICBhdXRob3I6ICdNYW5hZ2VyJywKICAgICAgY29udGVudDogIkhlIGlzIHNvIGJhZCIKICAgIH0sIHsKICAgICAgYXV0aG9yOiAnSFInLAogICAgICBjb250ZW50OiAiSGUgaXMgc28gYmFkIgogICAgfSwgewogICAgICBhdXRob3I6ICdIZWFkIEhSJywKICAgICAgY29udGVudDogIkhlIGlzIHNvIGJhZCIKICAgIH0sIHsKICAgICAgYXV0aG9yOiAnQ1RPJywKICAgICAgY29udGVudDogIkhlIGlzIHNvIGJhZCIKICAgIH1dOwogIH0KCiAgX2NyZWF0ZUNsYXNzKENhcmQsIFt7CiAgICBrZXk6ICJyZW5kZXJDYXJkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJDYXJkKCkgewogICAgICByZXR1cm4gIjxoNT4iICsgdGhpcy5uYW1lICsgIjwvaDU+IiArICI8c3Bhbj4iICsgdGhpcy5lZHVjYXRpb24gKyAiICAgIHwgICAgIiArICI8L3NwYW4+IiArICI8c3Bhbj4iICsgdGhpcy5jb250YWN0ICsgIiAgICB8ICAgICIgKyAiPC9zcGFuPiIgKyAiPHNwYW4+QXZnLiBSYXRpbmc6ICIgKyB0aGlzLnJhdGUgKyAiPC9zcGFuPiI7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQ2FyZDsKfSgpOw=="},{"version":3,"sources":["Kanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA,OAAA,SAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,CACA,SADA,EAEA,aAFA,EAGA,QAHA,EAIA,SAJA,EAKA,UALA,EAMA,UANA,CAHA;AAWA,MAAA,SAAA,EAAA;AACA,mBAAA,EADA;AAEA,uBAAA,EAFA;AAGA,kBAAA,EAHA;AAIA,mBAAA,EAJA;AAKA,oBAAA,EALA;AAMA,oBAAA;AANA,OAXA;AAmBA,MAAA,QAAA,EAAA;AAnBA,KAAA;AAqBA,GA5BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,GAAA,EAAA,eAAA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,SAAA,CAAA,SAAA,EAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA;AACA,aAAA,YAAA,GAAA,EAAA;AACA;AACA,KANA;AAOA,IAAA,YAPA,0BAOA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA;AACA,UAAA,IAAA,GAAA,IAAA,IAAA,CACA,KAAA,UAAA,CAAA,MAAA,CADA,EAEA,KAAA,UAAA,CAAA,WAAA,CAFA,EAGA,KAAA,UAAA,CAAA,SAAA,CAHA,CAAA;AAKA,WAAA,SAAA,CAAA,SAAA,EAAA,IAAA,CAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,SAAA,CAAA,SAAA,CAAA;AACA,KAhBA;AAiBA,IAAA,WAjBA,uBAiBA,OAjBA,EAiBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA,OAAA;AACA;AAnBA;AA7BA,CAAA;AAoDA,WAAA,IAAA;AACA,gBAAA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA;AAAA;;AACA,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,MAAA,GAAA,SAAA;AACA,SAAA,IAAA,GAAA,CAAA;AACA,SAAA,UAAA,GAAA,CAAA;AACA,SAAA,OAAA,GAAA,CAAA;AACA,SAAA,QAAA,GAAA,CACA;AAAA,MAAA,MAAA,EAAA,SAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA,EAGA;AAAA,MAAA,MAAA,EAAA,SAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAHA,EAIA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAJA,CAAA;AAMA;;AAfA;AAAA;AAAA,iCAiBA;AACA,aACA,SAAA,KAAA,IAAA,GAAA,OAAA,GACA,QADA,GACA,KAAA,SADA,GACA,WADA,GACA,SADA,GAEA,QAFA,GAEA,KAAA,OAFA,GAEA,WAFA,GAEA,SAFA,GAGA,qBAHA,GAGA,KAAA,IAHA,GAGA,SAJA;AAMA;AAxBA;;AAAA;AAAA","sourcesContent":["<template>\n<div class=\"b-container mt-5 mx-5\">\n    <div class=\"row\">\n      <div class=\"col form-inline\">\n        <b-form-input\n          id=\"input-2\"\n          v-model=\"newApplicant\"\n          required\n          placeholder=\"Enter new applicant's name\"\n          @keyup.enter=\"add\"\n        ></b-form-input>\n        <b-button @click=\"add\" variant=\"primary\" class=\"ml-3\">Add</b-button>\n      </div>\n    </div>\n\n    \n      <FormulateForm v-model=\"formValues\" @submit=\"handleSubmit\">\n        <FormulateInput name=\"name\" label=\"Name\" validation=\"required\" />\n        <FormulateInput name=\"education\" label=\"Education\" validation=\"required\" />\n        <FormulateInput name=\"contact\" label=\"Contact\" validation=\"required|number\" />\n        <FormulateInput type=\"submit\" label=\"Add Applicant\"/>\n      </FormulateForm>\n    \n\n\n    <div class=\"row mt-4\">\n      <div class=\"col-4\">\n        <div class=\"p-2 alert alert-secondary\">\n          <h3>{{boardName[0]}}</h3>\n          <!-- Backlog draggable component. Pass arrBackLog to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[0]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[0]]\"\n              :key=\"element.name\"\n            >\n              <!-- {{ element.name }} -->\n              <!-- Basic Info -->\n              <div v-html=\"element.renderCard()\"></div>\n\n              <!-- Collaps Detail -->\n              <b-button v-b-toggle.collapse-1 variant=\"primary\">Expand Detail</b-button>\n              <b-collapse id=\"collapse-1\" class=\"mt-2\">\n                <b-card>\n                  <!-- Rate -->\n                  <FormulateForm class=\"row\" v-model=\"tempRate\" @submit=\"card.submitRate(tempRate)\">\n                  <FormulateInput class=\"col\" name=\"rate\" placeholder=\"Enter your rate\" validation=\"required\" />\n                  <FormulateInput class=\"col\" type=\"submit\" name=\"rate\" label=\"Rate\" validation=\"required\" />\n                  </FormulateForm>\n                </b-card>\n                <b-card>\n                  <p>Comment</p>\n                  <b-list-group>\n                    <b-list-group-item class=\"d-flex align-items-center\" v-for=\"comment in element.comments\" v-bind:key=\"comment.author\">\n                      <b-avatar class=\"mr-3\"></b-avatar>\n                      <span class=\"mr-auto\">{{comment.author}}</span>\n                      <span class=\"mr-auto\">{{comment.content}}</span>\n                    </b-list-group-item>\n                  </b-list-group>\n                   <!-- Add Comment -->\n                  <FormulateForm class=\"row\" v-model=\"tempRate\" @submit=\"card.submitRate(tempRate)\">\n                    <FormulateInput class=\"col\" name=\"rate\" placeholder=\"Name\" validation=\"required\" />\n                  <FormulateInput class=\"col\" name=\"rate\" placeholder=\"Enter your comment\" validation=\"required\" />\n                  <FormulateInput class=\"col\" type=\"submit\" name=\"rate\" label=\"Comment\" validation=\"required\" />\n                  </FormulateForm>\n                </b-card>\n              </b-collapse>\n\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n      <div class=\"col-4\">\n        <div class=\"p-2 alert alert-primary\">\n          <h3>{{boardName[1]}}</h3>\n          <!-- In Progress draggable component. Pass arrInProgress to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[1]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[1]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n      <div class=\"col-4\">\n        <div class=\"p-2 alert alert-warning\">\n          <h3>{{boardName[2]}}</h3>\n          <!-- Testing draggable component. Pass arrTested to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[2]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[2]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n      <div class=\"col-4\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{boardName[3]}}</h3>\n          <!-- Done draggable component. Pass arrDone to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[3]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[3]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n       <div class=\"col-4\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{boardName[4]}}</h3>\n          <!-- Done draggable component. Pass arrDone to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[4]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[4]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n       <div class=\"col-4\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{boardName[5]}}</h3>\n          <!-- Done draggable component. Pass arrDone to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[boardName[5]]\"\n            group=\"tasks\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[boardName[5]]\"\n              :key=\"element.name\"\n            >\n              <div v-html=\"element.renderCard()\"></div>\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\"\n\nexport default {\n  name: 'Kanban',\n  components: {\n    draggable,\n\n  },\n  data() {\n    return {\n      formValues: {},\n      newApplicant: \"\",\n      boardName: [\n        'Applied',\n        'PhoneScreen',\n        'OnSite',\n        'Offered',\n        'Accepted',\n        'Rejected'\n      ],\n      listBoard: {\n          'Applied': [],\n          'PhoneScreen': [],\n          'OnSite': [],\n          'Offered': [],\n          'Accepted': [],\n          'Rejected': []\n      },\n      tempRate: 0\n    }\n  },\n  methods: {\n    add: function() {\n      if (this.newApplicant) {\n        this.listBoard['Applied'].push({name: this.newApplicant});\n        this.newApplicant = \"\";\n      }\n    },\n    handleSubmit() {\n      console.log(this.formValues);\n      var card = new Card(\n        this.formValues['name'],\n        this.formValues['education'],\n        this.formValues['contact']\n      );\n      this.listBoard['Applied'].push(card);\n      console.log(this.listBoard['Applied'])\n    },\n    navToDetail(contact) {\n      this.$router.push(\"/detail/\" + contact);\n    }\n  }\n}\n\nexport class Card {\n  constructor(name, education, contact) {\n    this.name = name;\n    this.education = education;\n    this.contact = contact;\n    this.status = \"Applied\";\n    this.rate = 0;\n    this.rateNumber = 0;\n    this.curRate = 0;\n    this.comments = [\n      {author: 'Manager', content: \"He is so bad\"},\n      {author: 'HR', content: \"He is so bad\"},\n      {author: 'Head HR', content: \"He is so bad\"},\n      {author: 'CTO', content: \"He is so bad\"},\n    ]\n  }\n\n  renderCard() {\n    return (\n      \"<h5>\" + this.name + \"</h5>\" +\n      \"<span>\" + this.education + \"    |    \" + \"</span>\" +\n      \"<span>\" + this.contact + \"    |    \" + \"</span>\" +\n      \"<span>Avg. Rating: \" + this.rate + \"</span>\" \n    )\n  }\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n/* light stylings for the kanban columns */\n.kanban-column {\n  min-height: 300px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}