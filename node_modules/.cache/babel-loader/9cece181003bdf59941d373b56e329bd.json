{"remainingRequest":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/babel-loader/lib/index.js!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/src/components/Kanban.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/src/components/Kanban.vue","mtime":1603850114561},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jzh/Onedrive/计算机/Collev_project/kanban-henry/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Kanban.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"b-container mt-5 mx-5\">\n\n    \n      <FormulateForm v-model=\"formValues\" @submit=\"handleSubmit\">\n        <FormulateInput name=\"name\" label=\"Name\" validation=\"required\" />\n        <FormulateInput name=\"education\" label=\"Education\" validation=\"required\" />\n        <FormulateInput @blur=\"checkApplicant\" name=\"contact\" label=\"Contact\" validation=\"required|number\" />\n        <FormulateInput :disabled=\"applicantRegistered\" type=\"submit\" label=\"Add Applicant\"/>\n        <p v-show=\"applicantRegistered\">'Adding failed. This contact number is already registered'</p>\n      </FormulateForm>\n    \n    <br>\n    <b-button block pill v-b-toggle.collapse-1 variant=\"outline-primary\" class=\"\">Switch Between Abstract / Detail View</b-button>\n    <div class=\"row mt-4\">\n      <div class=\"col-4\" v-for=\"bName in boardName\" :key=\"bName\">\n        <div class=\"p-2 alert alert-success\">\n          <h3>{{bName}}</h3>\n          <!-- Backlog draggable component. Pass arrBackLog to list prop -->\n          <draggable\n            class=\"list-group kanban-column\"\n            :list=\"listBoard[bName]\"\n            group=\"tasks\"\n            @end=\"updateStatus\"\n          >\n            <div\n              class=\"list-group-item\"\n              v-for=\"element in listBoard[bName]\"\n              :key=\"element.name\"\n            >\n              <div>\n              <!-- {{ element.name }} -->\n              <!-- Basic Info -->\n              <div v-html=\"element.renderCard()\"></div>\n\n              <!-- Collaps Detail -->\n              <b-collapse id=\"collapse-1\" class=\"mt-2\">\n                <b-card>\n                  <!-- Rate -->\n                  <!-- Add Comment -->\n                  <FormulateForm v-model=\"reviewForm\" @submit=\"submitReview(element)\">\n                    <FormulateInput\n                      name=\"rate\"\n                      :options=\"{1: 1, 2: 2, 3: 3, 4: 4, 5:5}\"\n                      type=\"select\"\n                      placeholder=\"Your rating\"\n                      label=\"How well is this applicant?\"\n                    />\n                    <FormulateInput name=\"author\" placeholder=\"Reviewer\" validation=\"required\" />\n                    <FormulateInput name=\"comment\" placeholder=\"Enter your comment\" validation=\"required\" />\n\n                  <!-- <FormulateInput class=\"col\" name=\"rate\" placeholder=\"Enter your rate\" validation=\"required\" /> -->\n                  <FormulateInput type=\"submit\" :disabled=\"element.reviewed\" label=\"Submit\" />\n                  <p v-show=\"element.reviewed\">Submitted! Refresh the page to see updated result</p>\n                  </FormulateForm>\n                </b-card>\n                <b-card>\n                  <p>Comments</p>\n                  <b-list-group>\n                    <b-list-group-item class=\"d-flex align-items-center\" v-for=\"comment in element.comments\" v-bind:key=\"comment.author\">\n                      <b-avatar class=\"mr-3\"></b-avatar>\n                      <span class=\"mr-auto\">{{comment['author']}}</span>\n                      <span class=\"mr-auto\">{{comment['content']}}</span>\n                    </b-list-group-item>\n                  </b-list-group>\n                   \n                  \n                </b-card>\n              </b-collapse>\n              </div>\n\n            </div>\n          </draggable>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\"\nimport axios from 'axios'\n\nconst BASE_URL = \"http://localhost:8000/\"\n\nexport default {\n  name: 'Kanban',\n  components: {\n    draggable,\n\n  },\n  data() {\n    return {\n      formValues: {},\n      newApplicant: \"\",\n      boardName: [\n        'Applied',\n        'PhoneScreen',\n        'OnSite',\n        'Offered',\n        'Accepted',\n        'Rejected'\n      ],\n      listBoard: {\n          'Applied': [],\n          'PhoneScreen': [],\n          'OnSite': [],\n          'Offered': [],\n          'Accepted': [],\n          'Rejected': []\n      },\n      tempRate: 0,\n      reviewForm: null,\n      collapseID: 1,\n      applicantRegistered: false\n    }\n  },\n  mounted: function() {\n    console.log(this.listBoard)\n    this.getAllApplicants();\n    console.log(this.listBoard)\n  },\n  methods: {\n    handleSubmit() {\n      console.log(this.formValues);\n      var contact = this.formValues['contact'];\n      this.checkApplicant(contact);\n      console.log(this.applicantRegistered);\n      if (this.applicantRegistered) {\n        // no adding\n      } else {\n\n        var card = new Card(\n          this.formValues['name'],\n          this.formValues['education'],\n          this.formValues['contact']\n        );\n        this.listBoard['Applied'].push(card);\n        console.log(this.listBoard['Applied']);\n\n        axios({\n          url: BASE_URL + \"add-applicant\",\n          method: 'post',\n          headers: { \n            'Accept': 'application/json',\n            'Content-Type': 'application/json' },\n          data: {\n            name: card.name,\n            education: card.education,\n            contact: card.contact,\n            status: 'Applied',\n            rate: 0,\n            rate_number: 0\n          }\n        });\n      }\n      \n    },\n\n    submitReview(card) {\n      console.log(\"fired \" + this.reviewForm);\n        axios({\n        url: BASE_URL + \"add-rate\",\n        method: 'post',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n        data: {\n          'contact': card.contact,\n          'newRate': this.reviewForm['rate']\n        }\n      });\n      \n      // submit comment\n      \n        axios({\n        url: BASE_URL + \"add-comment\",\n        method: 'post',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n        data: {\n          'contact': card.contact,\n          'author': this.reviewForm['author'],\n          'content': this.reviewForm['comment']\n        }\n      });\n      card.reviewed = true;\n      \n    },\n\n    checkApplicant() {\n      var contact = this.formValues['contact'];\n      axios({\n        url: BASE_URL + \"get-applicant\",\n        params: {contact: contact},\n        method: 'get',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n      })\n      .then(response => {\n        console.log('check applicant: ' + response.data)\n        if (response.data == '1') {\n          this.applicantRegistered = true;\n        } else {\n          this.applicantRegistered = false;\n        }\n      });\n    },\n\n    getAllApplicants() {\n      // this.refreshList();\n      var entry = null;\n      axios({\n        url: BASE_URL + \"get-all-applicants\",\n        method: 'get',\n        headers: { \n          'Accept': 'application/json',\n          'Content-Type': 'application/json' },\n      })\n      .then(response => {\n        console.log(response.data[0]);\n        for (entry of response.data) {\n          var card = new Card(entry.name, entry.education, entry.contact);\n          card.rate = entry.rate;\n          card.comments = entry.comment;\n          card.id = entry.id;\n          this.listBoard[entry.status].push(card)\n        }\n      })\n    },\n\n    refreshList() {\n      var n = null;\n      for (n of this.boardName) {\n        this.listBoard[n] = []\n      }\n    },\n\n    updateStatus() {\n      console.log(\"updating status\");\n      for (var i = 0; i < this.boardName.length; i++) {\n        var cur_board = this.boardName[i];\n        var board = this.listBoard[cur_board];\n        for (var j = 0; j < board.length; j++) {\n          if (board[j].status !== cur_board) {\n            // update the status\n            axios({\n              url: BASE_URL + \"update-applicant-status\",\n              method: 'post',\n              headers: { \n                'Accept': 'application/json',\n                'Content-Type': 'application/json' },\n              data: {\n                'contact': board[j].contact,\n                'status': cur_board\n              }\n            });\n          }\n        }\n        \n      }\n    },\n\n    incrementCollapseID() {\n      this.collapseID++;\n      return 'collapse-' + this.collapseID.toString();\n    }\n\n  },\n\n}\n\nexport class Card {\n  constructor(name, education, contact) {\n    this.id = 0;\n    this.name = name;\n    this.education = education;\n    this.contact = contact;\n    this.status = \"Applied\";\n    this.rate = 0;\n    this.reviewed = false;\n    this.comments = [\n      \n    ]\n  }\n\n  renderCard() {\n    return (\n      \"<h5>\" + this.name + \"</h5>\" +\n      \"<span>\" + this.education + \"    |    \" + \"</span>\" +\n      \"<span>\" + this.contact + \"    |    \" + \"</span>\" +\n      \"<span>Avg. Rating: \" + this.rate + \"</span>\" \n    )\n  }\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n/* light stylings for the kanban columns */\n.kanban-column {\n  min-height: 300px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}